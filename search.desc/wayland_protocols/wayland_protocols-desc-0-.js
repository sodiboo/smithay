searchState.loadedDescShard("wayland_protocols", 0, "This crate provides bindings to the official wayland …\nMiscellaneous protocols\nGeneric wayland protocols\nProtocols related to window management\nXWayland related protocols\nThe purpose of this protocol is to provide protocol object …\nThis protocol allows clients to monitor user idle status.\nThis protocol serves as an intermediary between capturing …\nThis protocol allows clients to ask the compositor to …\nThis protocol allows for a privileged Wayland client to …\nThe transient seat protocol can be used by privileged …\nClient-side API of this protocol\nServer-side API of this protocol\na mapped toplevel\nlist toplevels\napp_id change\nthe toplevel has been closed\ndestroy the ext_foreign_toplevel_handle_v1 object\nall information about the toplevel has been sent\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\na mapped toplevel\na stable identifier for a toplevel\nThe wire opcode for this request\nThe minimal object version supporting this request\ntitle change\ndestroy the ext_foreign_toplevel_handle_v1 object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndestroy the ext_foreign_toplevel_list_v1 object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nlist toplevels\nthe compositor has finished with the toplevel manager\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nstop sending events\na toplevel has been created\ndestroy the ext_foreign_toplevel_list_v1 object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nstop sending events\na mapped toplevel\nlist toplevels\napp_id change\nthe toplevel has been closed\ndestroy the ext_foreign_toplevel_handle_v1 object\nall information about the toplevel has been sent\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\na mapped toplevel\na stable identifier for a toplevel\nThe wire opcode for this request\nThe minimal object version supporting this request\ntitle change\napp_id change\nthe toplevel has been closed\nall information about the toplevel has been sent\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\na stable identifier for a toplevel\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ntitle change\ndestroy the ext_foreign_toplevel_list_v1 object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nlist toplevels\nthe compositor has finished with the toplevel manager\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nstop sending events\na toplevel has been created\nthe compositor has finished with the toplevel manager\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\na toplevel has been created\nClient-side API of this protocol\nServer-side API of this protocol\nidle notification\nidle notification manager\ndestroy the notification object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nidle notification\nnotification object is idle\nThe wire opcode for this request\nThe minimal object version supporting this request\nnotification object is no longer idle\ndestroy the notification object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndestroy the manager\nidle notification manager\ncreate a notification object\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ndestroy the manager\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncreate a notification object\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nminimum idle timeout in msec\nidle notification\nidle notification manager\ndestroy the notification object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nidle notification\nnotification object is idle\nThe wire opcode for this request\nThe minimal object version supporting this request\nnotification object is no longer idle\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nnotification object is idle\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nnotification object is no longer idle\ndestroy the manager\nidle notification manager\ncreate a notification object\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nminimum idle timeout in msec\nClient-side API of this protocol\nServer-side API of this protocol\nimage capture source manager for foreign toplevels\nopaque image capture source object\nimage capture source manager for outputs\ncreate source object for foreign toplevel\ndelete this object\nimage capture source manager for foreign toplevels\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncreate source object for foreign toplevel\ndelete this object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndelete this object\nopaque image capture source object\nThe wire opcode for this request\nThe minimal object version supporting this request\ndelete this object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ncreate source object for output\ndelete this object\nimage capture source manager for outputs\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncreate source object for output\ndelete this object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nimage capture source manager for foreign toplevels\nopaque image capture source object\nimage capture source manager for outputs\ncreate source object for foreign toplevel\ndelete this object\nimage capture source manager for foreign toplevels\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndelete this object\nopaque image capture source object\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ncreate source object for output\ndelete this object\nimage capture source manager for outputs\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nClient-side API of this protocol\nServer-side API of this protocol\ncursor capture session\nimage capture frame\nmanager to inform clients and begin capturing\nimage copy capture session\ndelete this object\nget_captuerer_session sent twice\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\ncursor entered captured area\ncursor capture session\nget image copy captuerer session\nhotspot changed\ncursor left captured area\nposition changed\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ndelete this object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nget image copy captuerer session\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nposition x coordinates\nhotspot x coordinates\nposition y coordinates\nhotspot y coordinates\ncapture request has been sent\nattach buffer to session\nbuffer constraints mismatch\ncapture a frame\nbuffer damaged region\ndamage buffer\ndestroy this object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nimage capture frame\ncapture failed\ninvalid buffer damage\ncapture sent without attach_buffer\npresentation time of the frame\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nframe is available for reading\nsession is no longer available\nbuffer transform\nunknown runtime error\nattach buffer to session\ncapture a frame\ndamage buffer\ndestroy this object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndamage height\nnanoseconds part of the timestamp\nhigh 32 bits of the seconds part of the timestamp\nlow 32 bits of the seconds part of the timestamp\ndamage width\ndamage x coordinate\ndamage y coordinate\nregion height\nregion width\nregion x coordinate\nregion y coordinate\ncapture the pointer cursor of an image capture source\ncapture an image capture source\ndestroy the manager\nmanager to inform clients and begin capturing\ninvalid option flag\npaint cursors onto captured frames\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\ncapture the pointer cursor of an image capture source\ncapture an image capture source\ndestroy the manager\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nimage capture source dimensions\ncreate a frame\ndelete this object\ndma-buf device\ndma-buf format\nall constraints have been sent\ncreate_frame sent before destroying previous frame\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nimage copy capture session\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nshm buffer format\nsession is no longer available\ncreate a frame\ndelete this object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndevice dev_t value\nshm format\ndrm format code\nbuffer height\ndrm format modifiers\nbuffer width\ncursor capture session\nimage capture frame\nmanager to inform clients and begin capturing\nimage copy capture session\ndelete this object\nget_captuerer_session sent twice\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\ncursor entered captured area\ncursor capture session\nget image copy captuerer session\nhotspot changed\ncursor left captured area\nposition changed\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncursor entered captured area\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nhotspot changed\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ncursor left captured area\nGet the opcode number of this message\nGet the opcode number of this message\nposition changed\nposition x coordinates\nhotspot x coordinates\nposition y coordinates\nhotspot y coordinates\ncapture request has been sent\nattach buffer to session\nbuffer constraints mismatch\ncapture a frame\nbuffer damaged region\ndamage buffer\ndestroy this object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nimage capture frame\ncapture failed\ninvalid buffer damage\ncapture sent without attach_buffer\npresentation time of the frame\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nframe is available for reading\nsession is no longer available\nbuffer transform\nunknown runtime error\nbuffer damaged region\ncapture failed\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\npresentation time of the frame\nframe is available for reading\nbuffer transform\ndamage height\nnanoseconds part of the timestamp\nhigh 32 bits of the seconds part of the timestamp\nlow 32 bits of the seconds part of the timestamp\ndamage width\ndamage x coordinate\ndamage y coordinate\nregion height\nregion width\nregion x coordinate\nregion y coordinate\ncapture the pointer cursor of an image capture source\ncapture an image capture source\ndestroy the manager\nmanager to inform clients and begin capturing\ninvalid option flag\npaint cursors onto captured frames\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nimage capture source dimensions\ncreate a frame\ndelete this object\ndma-buf device\ndma-buf format\nall constraints have been sent\ncreate_frame sent before destroying previous frame\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nimage copy capture session\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nshm buffer format\nsession is no longer available\nimage capture source dimensions\ndma-buf device\ndma-buf format\nall constraints have been sent\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nshm buffer format\nsession is no longer available\ndevice dev_t value\nshm format\ndrm format code\nbuffer height\ndrm format modifiers\nbuffer width\nClient-side API of this protocol\nServer-side API of this protocol\nused to lock the session\na surface displayed while the session is locked\nmanage lock state and create lock surfaces\ndestroy the session lock manager object\nused to lock the session\nattempt to lock the session\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ndestroy the session lock manager object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nattempt to lock the session\nGet the opcode number of this message\nGet the opcode number of this message\nack a configure event\nsurface committed before first ack_configure request\nthe client should resize its surface\ndestroy the lock surface object\nfailed to match ack’d width/height\nThe wire opcode for this event\nThe minimal object version supporting this event\na surface displayed while the session is locked\nserial provided in ack_configure is invalid\nsurface committed with a null buffer\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nack a configure event\ndestroy the lock surface object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nserial for use in ack_configure\nserial from the configure event\ngiven wl_surface has a buffer attached or committed\ndestroy the session lock\ngiven output already has a lock surface\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nmanage lock state and create lock surfaces\nthe session lock object should be destroyed\ncreate a lock surface for a given output\nattempted to destroy session lock while locked\nunlock requested but locked event was never sent\nsession successfully locked\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ngiven wl_surface already has a role\nunlock the session, destroying the object\ndestroy the session lock\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncreate a lock surface for a given output\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nunlock the session, destroying the object\nused to lock the session\na surface displayed while the session is locked\nmanage lock state and create lock surfaces\ndestroy the session lock manager object\nused to lock the session\nattempt to lock the session\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nack a configure event\nsurface committed before first ack_configure request\nthe client should resize its surface\ndestroy the lock surface object\nfailed to match ack’d width/height\nThe wire opcode for this event\nThe minimal object version supporting this event\na surface displayed while the session is locked\nserial provided in ack_configure is invalid\nsurface committed with a null buffer\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nthe client should resize its surface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nserial for use in ack_configure\nserial from the configure event\ngiven wl_surface has a buffer attached or committed\ndestroy the session lock\ngiven output already has a lock surface\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nmanage lock state and create lock surfaces\nthe session lock object should be destroyed\ncreate a lock surface for a given output\nattempted to destroy session lock while locked\nunlock requested but locked event was never sent\nsession successfully locked\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ngiven wl_surface already has a role\nunlock the session, destroying the object\nthe session lock object should be destroyed\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nsession successfully locked\nGet the opcode number of this message\nGet the opcode number of this message\nClient-side API of this protocol\nServer-side API of this protocol\ntransient seat manager\ntransient seat handle\ncreate a transient seat\ndestroy the manager\ntransient seat manager\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncreate a transient seat\ndestroy the manager\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ntransient seat creation denied\ndestroy transient seat\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\ntransient seat handle\nThe wire opcode for this request\nThe minimal object version supporting this request\ntransient seat is ready\ndestroy transient seat\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ntransient seat manager\ntransient seat handle\ncreate a transient seat\ndestroy the manager\ntransient seat manager\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ntransient seat creation denied\ndestroy transient seat\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\ntransient seat handle\nThe wire opcode for this request\nThe minimal object version supporting this request\ntransient seat is ready\ntransient seat creation denied\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ntransient seat is ready\nThis interface allows a client to set a factor for the …\nThis protocol allows a client to describe the kind of …\nThis protocol extension offers a simpler way for clients …\nThis protocol is used by Wayland compositors which act as …\nThis protocol allows a compositor to suggest for surfaces …\nFullscreen shell protocol\nScreensaver inhibition protocol\nInput method protocol\nInput timestamps protocol\nProtocol for inhibiting the compositor keyboard shortcuts\nLinux DMA-BUF protocol\nThis protocol allows clients to request explicit …\nLinux explicit synchronization protocol\nprotocol for constraining pointer motions\nPointer gestures protocol\nPresentation time protocol\nPrimary selection protocol\nprotocol for relative pointer motion events\nThis interface allows a client to register a new Wayland …\nThis protocol extension allows clients to create …\nWayland protocol for graphics tablets\nThis protocol provides a way for clients to indicate …\nText input protocol\nViewporter protocol\nClient-side API of this protocol\nServer-side API of this protocol\nalpha modifier object for a surface\nsurface alpha modifier manager\ndestroy the alpha modifier object\nwl_surface was destroyed\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nspecify the alpha multiplier\nalpha modifier object for a surface\ndestroy the alpha modifier object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nspecify the alpha multiplier\nwl_surface already has a alpha modifier object\ndestroy the alpha modifier manager object\ncreate a new toplevel decoration object\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nsurface alpha modifier manager\ndestroy the alpha modifier manager object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncreate a new toplevel decoration object\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nalpha modifier object for a surface\nsurface alpha modifier manager\ndestroy the alpha modifier object\nwl_surface was destroyed\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nspecify the alpha multiplier\nalpha modifier object for a surface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nwl_surface already has a alpha modifier object\ndestroy the alpha modifier manager object\ncreate a new toplevel decoration object\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nsurface alpha modifier manager\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nClient-side API of this protocol\nServer-side API of this protocol\nsurface content type manager\ncontent type object for a surface\nwl_surface already has a content type object\ndestroy the content type manager object\ncreate a new toplevel decoration object\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nsurface content type manager\ndestroy the content type manager object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncreate a new toplevel decoration object\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndestroy the content type object\ngame content type\nno content type applies\nphoto content type\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nspecify the content type\npossible content types\nvideo content type\ncontent type object for a surface\ndestroy the content type object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nspecify the content type\nthe content type\nsurface content type manager\ncontent type object for a surface\nwl_surface already has a content type object\ndestroy the content type manager object\ncreate a new toplevel decoration object\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nsurface content type manager\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndestroy the content type object\ngame content type\nno content type applies\nphoto content type\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nspecify the content type\npossible content types\nvideo content type\ncontent type object for a surface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe content type\nVersion 1\nClient-side API of this protocol\nServer-side API of this protocol\ncursor shape for a device\ncursor shape manager\ndrag-and-drop: alias of/shortcut to something is to be …\nsomething can be scrolled in any direction\na cell or set of cells may be selected\nresizing: that the item/column can be resized horizontally\na context menu is available for the object under the cursor\ndrag-and-drop: something is to be copied\nsimple crosshair\ndefault cursor\ndestroy the cursor shape device\nresizing: the east border is to be moved\nresizing: the east and west borders are to be moved\ndrag-and-drop: something can be grabbed\ndrag-and-drop: something is being grabbed\nhelp is available for the object under the cursor\nthe specified shape value is invalid\ndrag-and-drop: something is to be moved\nresizing: the north border is to be moved\nresizing: the north-east corner is to be moved\nresizing: the north-east and south-west corners are to be …\ndrag-and-drop: the dragged item cannot be dropped at the …\ndrag-and-drop: the requested action will not be carried out\nresizing: the north and south borders are to be moved\nresizing: the north-west corner is to be moved\nresizing: the north-west and south-east corners are to be …\npointer that indicates a link or another interactive …\nprogress indicator\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nresizing: that the item/row can be resized vertically\nresizing: the south border is to be moved\nresizing: the south-east corner is to be moved\nset device cursor to the shape\ncursor shapes\nresizing: the south-west corner is to be moved\ntext may be selected\nvertical text may be selected\nresizing: the west border is to be moved\nprogram is busy, user should wait\ncursor shape for a device\nsomething can be zoomed in\nsomething can be zoomed out\ndestroy the cursor shape device\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nset device cursor to the shape\nserial number of the enter event\ndestroy the manager\nmanage the cursor shape of a pointer device\nmanage the cursor shape of a tablet tool device\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncursor shape manager\ndestroy the manager\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nmanage the cursor shape of a pointer device\nmanage the cursor shape of a tablet tool device\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ncursor shape for a device\ncursor shape manager\ndrag-and-drop: alias of/shortcut to something is to be …\nsomething can be scrolled in any direction\na cell or set of cells may be selected\nresizing: that the item/column can be resized horizontally\na context menu is available for the object under the cursor\ndrag-and-drop: something is to be copied\nsimple crosshair\ndefault cursor\ndestroy the cursor shape device\nresizing: the east border is to be moved\nresizing: the east and west borders are to be moved\ndrag-and-drop: something can be grabbed\ndrag-and-drop: something is being grabbed\nhelp is available for the object under the cursor\nthe specified shape value is invalid\ndrag-and-drop: something is to be moved\nresizing: the north border is to be moved\nresizing: the north-east corner is to be moved\nresizing: the north-east and south-west corners are to be …\ndrag-and-drop: the dragged item cannot be dropped at the …\ndrag-and-drop: the requested action will not be carried out\nresizing: the north and south borders are to be moved\nresizing: the north-west corner is to be moved\nresizing: the north-west and south-east corners are to be …\npointer that indicates a link or another interactive …\nprogress indicator\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nresizing: that the item/row can be resized vertically\nresizing: the south border is to be moved\nresizing: the south-east corner is to be moved\nset device cursor to the shape\ncursor shapes\nresizing: the south-west corner is to be moved\ntext may be selected\nvertical text may be selected\nresizing: the west border is to be moved\nprogram is busy, user should wait\ncursor shape for a device\nsomething can be zoomed in\nsomething can be zoomed out\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nserial number of the enter event\ndestroy the manager\nmanage the cursor shape of a pointer device\nmanage the cursor shape of a tablet tool device\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncursor shape manager\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nClient-side API of this protocol\nServer-side API of this protocol\na leasable DRM connector\nlease device\nDRM lease request\na DRM lease\nconnector_id\ndescription\ndestroy connector\nall properties have been sent\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nname\nThe wire opcode for this request\nThe minimal object version supporting this request\nlease offer withdrawn\na leasable DRM connector\ndestroy connector\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nDRM connector ID\nconnector description\nconnector name\nadvertise connectors available for leases\ncreate a lease request object\nsignals grouping of connectors\nopen a non-master fd for this DRM node\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease this object\nthe compositor has finished using the device\nlease device\ncreate a lease request object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrelease this object\nDRM file descriptor\nrequested a connector twice\nrequested a lease without requesting a connector\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrequest a connector for this lease\nsubmit the lease request\nDRM lease request\nrequested a connector from a different lease device\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrequest a connector for this lease\nsubmit the lease request\ndestroys the lease object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nsent when the lease has been revoked\nshares the DRM file descriptor\nThe wire opcode for this request\nThe minimal object version supporting this request\na DRM lease\ndestroys the lease object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nleased DRM file descriptor\na leasable DRM connector\nlease device\nDRM lease request\na DRM lease\nconnector_id\ndescription\ndestroy connector\nall properties have been sent\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nname\nThe wire opcode for this request\nThe minimal object version supporting this request\nlease offer withdrawn\na leasable DRM connector\nconnector_id\ndescription\nall properties have been sent\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nname\nGet the opcode number of this message\nGet the opcode number of this message\nlease offer withdrawn\nDRM connector ID\nconnector description\nconnector name\nadvertise connectors available for leases\ncreate a lease request object\nsignals grouping of connectors\nopen a non-master fd for this DRM node\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease this object\nthe compositor has finished using the device\nlease device\nadvertise connectors available for leases\nsignals grouping of connectors\nopen a non-master fd for this DRM node\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe compositor has finished using the device\nDRM file descriptor\nrequested a connector twice\nrequested a lease without requesting a connector\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrequest a connector for this lease\nsubmit the lease request\nDRM lease request\nrequested a connector from a different lease device\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndestroys the lease object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nsent when the lease has been revoked\nshares the DRM file descriptor\nThe wire opcode for this request\nThe minimal object version supporting this request\na DRM lease\nsent when the lease has been revoked\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nshares the DRM file descriptor\nGet the opcode number of this message\nGet the opcode number of this message\nleased DRM file descriptor\nClient-side API of this protocol\nServer-side API of this protocol\nfractional surface scale information\nfractional scale interface to a wl_surface\nunbind the fractional surface scale interface\nthe surface already has a fractional_scale object …\nextend surface interface for scale information\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nfractional surface scale information\nunbind the fractional surface scale interface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nextend surface interface for scale information\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe surface\nremove surface scale information for surface\nThe wire opcode for this event\nThe minimal object version supporting this event\nnotify of new preferred scale\nThe wire opcode for this request\nThe minimal object version supporting this request\nfractional scale interface to a wl_surface\nremove surface scale information for surface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe new preferred scale\nfractional surface scale information\nfractional scale interface to a wl_surface\nunbind the fractional surface scale interface\nthe surface already has a fractional_scale object …\nextend surface interface for scale information\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nfractional surface scale information\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe new surface scale info interface id\nthe surface\nremove surface scale information for surface\nThe wire opcode for this event\nThe minimal object version supporting this event\nnotify of new preferred scale\nThe wire opcode for this request\nThe minimal object version supporting this request\nfractional scale interface to a wl_surface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nnotify of new preferred scale\nthe new preferred scale\nUnstable version 1\nClient-side API of this protocol\nServer-side API of this protocol\ndisplays a single surface per output\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nmode switch failed\nmode switch succeeded\nmode switch cancelled\nzwp_fullscreen_shell_mode_feedback_v1\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ncompositor is capable of almost any output mode\ncapabilities advertised by the compositor\nadvertises a capability of the compositor\ncenter the surface on the output\ncompositor has a separate cursor plane\nno preference, apply default policy\nThe wire opcode for this event\nThe minimal object version supporting this event\nwl_fullscreen_shell error values\npresent_method is not known\ndifferent method to set the surface fullscreen\npresent surface for display\npresent surface for display at a particular mode\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the wl_fullscreen_shell interface\ngiven wl_surface has another role\nscale the surface to the size of the output ignoring …\nscale the surface, preserving aspect ratio, to the largest …\nscale the surface, preserving aspect ratio, to fully fill …\ndisplays a single surface per output\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\npresent surface for display\npresent surface for display at a particular mode\nrelease the wl_fullscreen_shell interface\ndisplays a single surface per output\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nmode switch failed\nmode switch succeeded\nmode switch cancelled\nzwp_fullscreen_shell_mode_feedback_v1\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nmode switch failed\nmode switch succeeded\nGet the opcode number of this message\nGet the opcode number of this message\nmode switch cancelled\ncompositor is capable of almost any output mode\ncapabilities advertised by the compositor\nadvertises a capability of the compositor\ncenter the surface on the output\ncompositor has a separate cursor plane\nno preference, apply default policy\nThe wire opcode for this event\nThe minimal object version supporting this event\nwl_fullscreen_shell error values\npresent_method is not known\ndifferent method to set the surface fullscreen\npresent surface for display\npresent surface for display at a particular mode\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the wl_fullscreen_shell interface\ngiven wl_surface has another role\nscale the surface to the size of the output ignoring …\nscale the surface, preserving aspect ratio, to the largest …\nscale the surface, preserving aspect ratio, to fully fill …\ndisplays a single surface per output\nadvertises a capability of the compositor\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nUnstable version 1\nClient-side API of this protocol\nServer-side API of this protocol\ncontrol behavior when display idles\ncontext object for inhibiting idle behavior\ncreate a new inhibitor object\ndestroy the idle inhibitor object\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncontrol behavior when display idles\ncreate a new inhibitor object\ndestroy the idle inhibitor object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe surface that inhibits the idle behavior\ndestroy the idle inhibitor object\nThe wire opcode for this request\nThe minimal object version supporting this request\ncontext object for inhibiting idle behavior\ndestroy the idle inhibitor object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ncontrol behavior when display idles\ncontext object for inhibiting idle behavior\ncreate a new inhibitor object\ndestroy the idle inhibitor object\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncontrol behavior when display idles\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe surface that inhibits the idle behavior\ndestroy the idle inhibitor object\nThe wire opcode for this request\nThe minimal object version supporting this request\ncontext object for inhibiting idle behavior\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nUnstable version 1\nClient-side API of this protocol\nServer-side API of this protocol\ninput method context\ninput method\ninterface for implementing keyboards\ncommit string\nset cursor to a new position\ndelete text\nThis is a destructor, once sent this object cannot be used …\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\ngrab hardware keyboard\nforward key event\nkeysym\nforward modifiers event\npre-edit cursor\npre-edit string\npre-edit styling\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nsurrounding text event\ninput method context\ncommit string\nset cursor to a new position\ndelete text\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ngrab hardware keyboard\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nforward key event\nkeysym\nforward modifiers event\nGet the opcode number of this message\nGet the opcode number of this message\npre-edit cursor\npre-edit string\npre-edit styling\nserial of text input state\ngroup from wl_keyboard::modifiers\nkey from wl_keyboard::key\nmods_depressed from wl_keyboard::modifiers\nmods_latched from wl_keyboard::modifiers\nmods_locked from wl_keyboard::modifiers\nserial of the latest known text input state\nserial of the latest known text input state\nserial of the latest known text input state\nserial from wl_keyboard::key\nserial from wl_keyboard::modifiers\nserial of the latest known text input state\nserial of the latest known text input state\nstate from wl_keyboard::key\ntime from wl_keyboard::key\nactivate event\ndeactivate event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\ninput method\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset the surface type as an overlay panel\nset the surface type as a keyboard\nzwp_input_panel_surface_v1\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nset the surface type as an overlay panel\nset the surface type as a keyboard\nThe wire opcode for this request\nThe minimal object version supporting this request\ninterface for implementing keyboards\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ninput method context\ninput method\ninterface for implementing keyboards\ncommit string\nset cursor to a new position\ndelete text\nThis is a destructor, once received this object cannot be …\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\ngrab hardware keyboard\nforward key event\nkeysym\nforward modifiers event\npre-edit cursor\npre-edit string\npre-edit styling\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nsurrounding text event\ninput method context\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nsurrounding text event\nserial of text input state\ngroup from wl_keyboard::modifiers\nkey from wl_keyboard::key\nmods_depressed from wl_keyboard::modifiers\nmods_latched from wl_keyboard::modifiers\nmods_locked from wl_keyboard::modifiers\nserial of the latest known text input state\nserial of the latest known text input state\nserial of the latest known text input state\nserial from wl_keyboard::key\nserial from wl_keyboard::modifiers\nserial of the latest known text input state\nserial of the latest known text input state\nstate from wl_keyboard::key\ntime from wl_keyboard::key\nactivate event\ndeactivate event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\ninput method\nactivate event\ndeactivate event\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset the surface type as an overlay panel\nset the surface type as a keyboard\nzwp_input_panel_surface_v1\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nThe wire opcode for this request\nThe minimal object version supporting this request\ninterface for implementing keyboards\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nUnstable version 1\nClient-side API of this protocol\nServer-side API of this protocol\ncontext object for high-resolution input timestamps\ncontext object for input timestamps\ndestroy the input timestamps manager object\nsubscribe to high-resolution keyboard timestamp events\nsubscribe to high-resolution pointer timestamp events\nsubscribe to high-resolution touch timestamp events\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncontext object for high-resolution input timestamps\ndestroy the input timestamps manager object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nsubscribe to high-resolution keyboard timestamp events\nsubscribe to high-resolution pointer timestamp events\nsubscribe to high-resolution touch timestamp events\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe wl_keyboard object for which to get timestamp events\nthe wl_pointer object for which to get timestamp events\nthe wl_touch object for which to get timestamp events\ndestroy the input timestamps object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this request\nThe minimal object version supporting this request\nhigh-resolution timestamp event\ncontext object for input timestamps\ndestroy the input timestamps object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nnanoseconds part of the timestamp\nhigh 32 bits of the seconds part of the timestamp\nlow 32 bits of the seconds part of the timestamp\ncontext object for high-resolution input timestamps\ncontext object for input timestamps\ndestroy the input timestamps manager object\nsubscribe to high-resolution keyboard timestamp events\nsubscribe to high-resolution pointer timestamp events\nsubscribe to high-resolution touch timestamp events\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncontext object for high-resolution input timestamps\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe wl_keyboard object for which to get timestamp events\nthe wl_pointer object for which to get timestamp events\nthe wl_touch object for which to get timestamp events\ndestroy the input timestamps object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this request\nThe minimal object version supporting this request\nhigh-resolution timestamp event\ncontext object for input timestamps\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nhigh-resolution timestamp event\nnanoseconds part of the timestamp\nhigh 32 bits of the seconds part of the timestamp\nlow 32 bits of the seconds part of the timestamp\nUnstable version 1\nClient-side API of this protocol\nServer-side API of this protocol\ncontext object for keyboard grab_manager\ncontext object for keyboard shortcuts inhibitor\nthe shortcuts are already inhibited for this surface\ndestroy the keyboard shortcuts inhibitor object\ncreate a new keyboard shortcuts inhibitor object\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncontext object for keyboard grab_manager\ndestroy the keyboard shortcuts inhibitor object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncreate a new keyboard shortcuts inhibitor object\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe wl_seat for which keyboard shortcuts should be disabled\nthe surface that inhibits the keyboard shortcuts behavior\nshortcuts are inhibited\ndestroy the keyboard shortcuts inhibitor object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nshortcuts are restored\nThe wire opcode for this request\nThe minimal object version supporting this request\ncontext object for keyboard shortcuts inhibitor\ndestroy the keyboard shortcuts inhibitor object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ncontext object for keyboard grab_manager\ncontext object for keyboard shortcuts inhibitor\nthe shortcuts are already inhibited for this surface\ndestroy the keyboard shortcuts inhibitor object\ncreate a new keyboard shortcuts inhibitor object\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncontext object for keyboard grab_manager\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe wl_seat for which keyboard shortcuts should be disabled\nthe surface that inhibits the keyboard shortcuts behavior\nshortcuts are inhibited\ndestroy the keyboard shortcuts inhibitor object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nshortcuts are restored\nThe wire opcode for this request\nThe minimal object version supporting this request\ncontext object for keyboard shortcuts inhibitor\nshortcuts are inhibited\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nshortcuts are restored\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nUnstable version 1\nClient-side API of this protocol\nServer-side API of this protocol\nparameters for creating a dmabuf-based wl_buffer\ndmabuf feedback\nfactory for creating dmabuf-based wl_buffers\nadd a dmabuf to the temporary set\nthe dmabuf_batch object has already been used to create a …\nbottom field first\ncreate a wl_buffer from the given dmabufs\nimmediately create a wl_buffer from the given dmabufs\nbuffer creation succeeded\ndelete this object, used or not\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nbuffer creation failed\nmissing or too many planes to create a buffer\ncontent is interlaced\ninvalid width or height\nformat not supported\ninvalid wl_buffer resulted from importing dmabufs via the …\noffset + stride * height goes out of dmabuf bounds\nplane index out of bounds\nthe plane index was already set\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncontents are y-inverted\nparameters for creating a dmabuf-based wl_buffer\nadd a dmabuf to the temporary set\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\ncreate a wl_buffer from the given dmabufs\nimmediately create a wl_buffer from the given dmabufs\ndelete this object, used or not\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nthe newly created wl_buffer\ndmabuf fd\nsee enum flags\nsee enum flags\nDRM_FORMAT code\nDRM_FORMAT code\nbase plane height in pixels\nbase plane height in pixels\nhigh 32 bits of layout modifier\nlow 32 bits of layout modifier\noffset in bytes\nplane index\nstride in bytes\nbase plane width in pixels\nbase plane width in pixels\ndestroy the feedback object\nall feedback has been sent\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nformat and modifier table\npreferred main device\nThe wire opcode for this request\nThe minimal object version supporting this request\ndirect scan-out tranche\na preference tranche has been sent\ntranche flags\nsupported buffer format modifier\ntarget device\ndmabuf feedback\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\ndestroy the feedback object\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\ndevice dev_t value\ndevice dev_t value\ntable file descriptor\ntranche flags\narray of 16-bit indexes\ntable size, in bytes\ncreate a temporary object for buffer parameters\nunbind the factory\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nsupported buffer format\nget default feedback\nget feedback for a surface\nsupported buffer format modifier\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nfactory for creating dmabuf-based wl_buffers\ncreate a temporary object for buffer parameters\nunbind the factory\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nget default feedback\nget feedback for a surface\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nDRM_FORMAT code\nDRM_FORMAT code\nhigh 32 bits of layout modifier\nlow 32 bits of layout modifier\nparameters for creating a dmabuf-based wl_buffer\ndmabuf feedback\nfactory for creating dmabuf-based wl_buffers\nadd a dmabuf to the temporary set\nthe dmabuf_batch object has already been used to create a …\nbottom field first\ncreate a wl_buffer from the given dmabufs\nimmediately create a wl_buffer from the given dmabufs\nbuffer creation succeeded\ndelete this object, used or not\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nbuffer creation failed\nmissing or too many planes to create a buffer\ncontent is interlaced\ninvalid width or height\nformat not supported\ninvalid wl_buffer resulted from importing dmabufs via the …\noffset + stride * height goes out of dmabuf bounds\nplane index out of bounds\nthe plane index was already set\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncontents are y-inverted\nparameters for creating a dmabuf-based wl_buffer\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nbuffer creation succeeded\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nbuffer creation failed\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nthe newly created wl_buffer\nid for the newly created wl_buffer\ndmabuf fd\nsee enum flags\nsee enum flags\nDRM_FORMAT code\nDRM_FORMAT code\nbase plane height in pixels\nbase plane height in pixels\nhigh 32 bits of layout modifier\nlow 32 bits of layout modifier\noffset in bytes\nplane index\nstride in bytes\nbase plane width in pixels\nbase plane width in pixels\ndestroy the feedback object\nall feedback has been sent\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nformat and modifier table\npreferred main device\nThe wire opcode for this request\nThe minimal object version supporting this request\ndirect scan-out tranche\na preference tranche has been sent\ntranche flags\nsupported buffer format modifier\ntarget device\ndmabuf feedback\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nall feedback has been sent\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nformat and modifier table\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\npreferred main device\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\na preference tranche has been sent\ntranche flags\nsupported buffer format modifier\ntarget device\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\ndevice dev_t value\ndevice dev_t value\ntable file descriptor\ntranche flags\narray of 16-bit indexes\ntable size, in bytes\ncreate a temporary object for buffer parameters\nunbind the factory\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nsupported buffer format\nget default feedback\nget feedback for a surface\nsupported buffer format modifier\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nfactory for creating dmabuf-based wl_buffers\nsupported buffer format\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nsupported buffer format modifier\nGet the opcode number of this message\nGet the opcode number of this message\nDRM_FORMAT code\nDRM_FORMAT code\nhigh 32 bits of layout modifier\nlow 32 bits of layout modifier\nthe new temporary\nVersion 1\nClient-side API of this protocol\nServer-side API of this protocol\nglobal for providing explicit synchronization\nper-surface explicit synchronization\nsynchronization object timeline\ndestroy explicit synchronization factory object\nextend surface interface for explicit synchronization\nimport a DRM syncobj timeline\nthe timeline object could not be imported\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nthe surface already has a synchronization object associated\nglobal for providing explicit synchronization\ndestroy explicit synchronization factory object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nextend surface interface for explicit synchronization\nimport a DRM syncobj timeline\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndrm_syncobj file descriptor\nthe surface\nacquire and release timeline points are in conflict\ndestroy the surface synchronization object\nno acquire timeline point was set\nno buffer was attached\nno release timeline point was set\nthe associated wl_surface was destroyed\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset the acquire timeline point\nset the release timeline point\nthe buffer does not support explicit synchronization\nper-surface explicit synchronization\ndestroy the surface synchronization object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nset the acquire timeline point\nset the release timeline point\nhigh 32 bits of the point value\nhigh 32 bits of the point value\nlow 32 bits of the point value\nlow 32 bits of the point value\ndestroy the timeline\nThe wire opcode for this request\nThe minimal object version supporting this request\nsynchronization object timeline\ndestroy the timeline\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nglobal for providing explicit synchronization\nper-surface explicit synchronization\nsynchronization object timeline\ndestroy explicit synchronization factory object\nextend surface interface for explicit synchronization\nimport a DRM syncobj timeline\nthe timeline object could not be imported\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nthe surface already has a synchronization object associated\nglobal for providing explicit synchronization\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndrm_syncobj file descriptor\nthe new synchronization surface object id\nthe surface\nacquire and release timeline points are in conflict\ndestroy the surface synchronization object\nno acquire timeline point was set\nno buffer was attached\nno release timeline point was set\nthe associated wl_surface was destroyed\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset the acquire timeline point\nset the release timeline point\nthe buffer does not support explicit synchronization\nper-surface explicit synchronization\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nhigh 32 bits of the point value\nhigh 32 bits of the point value\nlow 32 bits of the point value\nlow 32 bits of the point value\ndestroy the timeline\nThe wire opcode for this request\nThe minimal object version supporting this request\nsynchronization object timeline\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nUnstable version 1\nClient-side API of this protocol\nServer-side API of this protocol\nbuffer release explicit synchronization\nprotocol for providing explicit synchronization\nper-surface explicit synchronization support\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nrelease buffer with fence\nrelease buffer immediately\nbuffer release explicit synchronization\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nfence for last operation on buffer\ndestroy explicit synchronization factory object\nextend surface interface for explicit synchronization\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nthe surface already has a synchronization object associated\nprotocol for providing explicit synchronization\ndestroy explicit synchronization factory object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nextend surface interface for explicit synchronization\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe surface\ndestroy synchronization object\nmultiple fences added for a single surface commit\nmultiple releases added for a single surface commit\nrelease fence for last-attached buffer\nthe fence specified by the client could not be imported\nno buffer was attached\nthe associated wl_surface was destroyed\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset the acquire fence\nthe buffer does not support explicit synchronization\nper-surface explicit synchronization support\ndestroy synchronization object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nrelease fence for last-attached buffer\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nset the acquire fence\nacquire fence fd\nbuffer release explicit synchronization\nprotocol for providing explicit synchronization\nper-surface explicit synchronization support\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nrelease buffer with fence\nrelease buffer immediately\nbuffer release explicit synchronization\nrelease buffer with fence\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nrelease buffer immediately\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nfence for last operation on buffer\ndestroy explicit synchronization factory object\nextend surface interface for explicit synchronization\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nthe surface already has a synchronization object associated\nprotocol for providing explicit synchronization\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe new synchronization interface id\nthe surface\ndestroy synchronization object\nmultiple fences added for a single surface commit\nmultiple releases added for a single surface commit\nrelease fence for last-attached buffer\nthe fence specified by the client could not be imported\nno buffer was attached\nthe associated wl_surface was destroyed\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset the acquire fence\nthe buffer does not support explicit synchronization\nper-surface explicit synchronization support\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nacquire fence fd\nnew zwp_linux_buffer_release_v1 object\nUnstable version 1\nClient-side API of this protocol\nServer-side API of this protocol\nconfined pointer object\nreceive relative pointer motion events\nconstrain the movement of a pointer\npointer confined\ndestroy the confined pointer object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset a new confine region\npointer unconfined\nconfined pointer object\ndestroy the confined pointer object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nset a new confine region\nregion of surface\ndestroy the locked pointer object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nlock activation event\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset the pointer cursor position hint\nset a new lock region\nlock deactivation event\nreceive relative pointer motion events\ndestroy the locked pointer object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nset the pointer cursor position hint\nset a new lock region\nregion of surface\nsurface-local x coordinate\nsurface-local y coordinate\npointer constraint already requested on that surface\nconfine pointer to a region\ndestroy the pointer constraints manager object\nwp_pointer_constraints error values\nconstraint lifetime\nlock pointer to a position\nthe pointer constraint is defunct once deactivated\nthe pointer constraint may reactivate\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nconstrain the movement of a pointer\nconfine pointer to a region\ndestroy the pointer constraints manager object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nlock pointer to a position\nGet the opcode number of this message\nGet the opcode number of this message\nlock lifetime\nconfinement lifetime\nthe pointer that should be locked\nthe pointer that should be confined\nregion of surface\nregion of surface\nsurface to lock pointer to\nsurface to lock pointer to\nconfined pointer object\nreceive relative pointer motion events\nconstrain the movement of a pointer\npointer confined\ndestroy the confined pointer object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset a new confine region\npointer unconfined\nconfined pointer object\npointer confined\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\npointer unconfined\nregion of surface\ndestroy the locked pointer object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nlock activation event\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset the pointer cursor position hint\nset a new lock region\nlock deactivation event\nreceive relative pointer motion events\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nlock activation event\nGet the opcode number of this message\nGet the opcode number of this message\nlock deactivation event\nregion of surface\nsurface-local x coordinate\nsurface-local y coordinate\npointer constraint already requested on that surface\nconfine pointer to a region\ndestroy the pointer constraints manager object\nwp_pointer_constraints error values\nconstraint lifetime\nlock pointer to a position\nthe pointer constraint is defunct once deactivated\nthe pointer constraint may reactivate\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nconstrain the movement of a pointer\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nlock lifetime\nconfinement lifetime\nthe pointer that should be locked\nthe pointer that should be confined\nregion of surface\nregion of surface\nsurface to lock pointer to\nsurface to lock pointer to\nUnstable version 1\nClient-side API of this protocol\nServer-side API of this protocol\na hold gesture object\na pinch gesture object\na swipe gesture object\ntouchpad gestures\nmulti-finger hold begin\ndestroy the hold gesture object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nmulti-finger hold end\nThe wire opcode for this request\nThe minimal object version supporting this request\na hold gesture object\ndestroy the hold gesture object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\n1 if the gesture was cancelled, 0 otherwise\nnumber of fingers\ntimestamp with millisecond granularity\ntimestamp with millisecond granularity\nmulti-finger pinch begin\ndestroy the pinch gesture object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nmulti-finger pinch end\nThe wire opcode for this request\nThe minimal object version supporting this request\nmulti-finger pinch motion\na pinch gesture object\ndestroy the pinch gesture object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\n1 if the gesture was cancelled, 0 otherwise\ndelta x coordinate in surface coordinate space\ndelta y coordinate in surface coordinate space\nnumber of fingers\nangle in degrees cw relative to the previous event\nscale relative to the initial finger position\ntimestamp with millisecond granularity\ntimestamp with millisecond granularity\ntimestamp with millisecond granularity\nmulti-finger swipe begin\ndestroy the pointer swipe gesture object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nmulti-finger swipe end\nThe wire opcode for this request\nThe minimal object version supporting this request\nmulti-finger swipe motion\na swipe gesture object\ndestroy the pointer swipe gesture object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\n1 if the gesture was cancelled, 0 otherwise\ndelta x coordinate in surface coordinate space\ndelta y coordinate in surface coordinate space\nnumber of fingers\ntimestamp with millisecond granularity\ntimestamp with millisecond granularity\ntimestamp with millisecond granularity\nget hold gesture\nget pinch gesture\nget swipe gesture\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ndestroy the pointer gesture object\ntouchpad gestures\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nget hold gesture\nget pinch gesture\nget swipe gesture\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndestroy the pointer gesture object\na hold gesture object\na pinch gesture object\na swipe gesture object\ntouchpad gestures\nmulti-finger hold begin\ndestroy the hold gesture object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nmulti-finger hold end\nThe wire opcode for this request\nThe minimal object version supporting this request\na hold gesture object\nmulti-finger hold begin\nmulti-finger hold end\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\n1 if the gesture was cancelled, 0 otherwise\nnumber of fingers\ntimestamp with millisecond granularity\ntimestamp with millisecond granularity\nmulti-finger pinch begin\ndestroy the pinch gesture object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nmulti-finger pinch end\nThe wire opcode for this request\nThe minimal object version supporting this request\nmulti-finger pinch motion\na pinch gesture object\nmulti-finger pinch begin\nmulti-finger pinch end\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nmulti-finger pinch motion\n1 if the gesture was cancelled, 0 otherwise\ndelta x coordinate in surface coordinate space\ndelta y coordinate in surface coordinate space\nnumber of fingers\nangle in degrees cw relative to the previous event\nscale relative to the initial finger position\ntimestamp with millisecond granularity\ntimestamp with millisecond granularity\ntimestamp with millisecond granularity\nmulti-finger swipe begin\ndestroy the pointer swipe gesture object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nmulti-finger swipe end\nThe wire opcode for this request\nThe minimal object version supporting this request\nmulti-finger swipe motion\na swipe gesture object\nmulti-finger swipe begin\nmulti-finger swipe end\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nmulti-finger swipe motion\n1 if the gesture was cancelled, 0 otherwise\ndelta x coordinate in surface coordinate space\ndelta y coordinate in surface coordinate space\nnumber of fingers\ntimestamp with millisecond granularity\ntimestamp with millisecond granularity\ntimestamp with millisecond granularity\nget hold gesture\nget pinch gesture\nget swipe gesture\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ndestroy the pointer gesture object\ntouchpad gestures\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nClient-side API of this protocol\nServer-side API of this protocol\ntimed presentation related wl_surface requests\npresentation time feedback event\nclock ID for timestamps\nunbind from the presentation interface\nThe wire opcode for this event\nThe minimal object version supporting this event")